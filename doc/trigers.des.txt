Это только короткая справка. Более подробные описания
можно найти по следующим адресам:
http://www.amud.orc.ru/Script_Russian/DGscripts1.htm
http://www.mindspring.com/~heilpern/dg_scripts/

============================================================== 
 xDOOR <id | vnum> <direction NWSEUD> <field> <value>
Изменяет параметры выхода по направлению
         field
              purge       - убрать выход
              description - изменить описание
              flags       - флаги выхода
              key         - номер ключа
              name        - ключевое слово (дверь, ворота и тп)
              room        - куда ведет(vnum комнаты)
Примечание : если выхода не было - он создается (кроме purge)
===============================================================
 xFORCE 
Аналогична FORCE из командного интерпретатора
===============================================================
 xLOAD <mob|obj> <vnum>
Зачитывает моба или обьект с указанным VNUM в ту же комнату

(при зачитывании ВЫПОЛНЯЕТСЯ СКРИПТ ЗАГРУЗКИ указанного моба|об[екта)
===============================================================
 xPURGE [id | name]
Извлекает предмет или моба из комнаты, без параметра - извлекает
все (кроме вызвавшего тригер)
- При указании имени - сначала оценивается ИД, затем мобы, затем
предметы
- Не извлекает игроков
- При указании имени - может извлечь самое себя
==============================================================
 xTELEPORT <id | name | all> <vnum | name of room>
Переносит указанных(всех) игроков в указанную комнату комнату
Не трогает имморталов
==============================================================
 xDAMAGE <name> <hitp>
Повреждает указанного персонажа (для мобов - используется
стандартная функция, для комнат и обьектов - чистые повреждения,
т.о. wimpy - не работает !)
==============================================================
 xSEND <id | name of char> [message]
Посылает сообщение указанному персонажу
==============================================================
 xECHO [message]
Посылает сообщение в эту комнату 
==============================================================
 xECHOARROUND <id | name of char> [message]
Посылает сообщение в комнату с указанным персонажем
==============================================================
 xSKILLTURN <id | name of char> <skillname> <on|off>
Устанавливает или убирает умение у персонажа (устанавливает
при неустановленном в 5%)
==============================================================
 xSKILLADD <id | name of char> <skillname> <value>
Изменяет умение персонажа на(add/dec) указанное значение
==============================================================
 xSPELLTURN <id | name of char> <spellname> <on|off>
Устанавливает или убирает заклинание у персонажа 
==============================================================
 xSPELLADD <id | name of char> <spellname> <value>
Изменяет количество заклинаний у персонажа на(add/dec) указанное 
значение. Если заклинания не было - добавляется как временное
заклинание.
==============================================================
 xSPELLITEM <id | name of char> <spellname> <on|off> <items|runes|wands|scroll|potion>
Устанавливает/отключает предметную магию указанного типа у персонажа
(Включение wands|scroll|potion автоматически добавляет умение создания
предметов данного типа)
==============================================================

 SELF - автоматически устанавливается в предмет|моба|комнату, к которым
привязан данный скрипт
 

************     Глобально используемые переменные      ****************
%EXIST.<MOB|OBJ>(VNUM)% - моб или обьект присутствует в игре (не в ренте 
для обьекта!)
%WORLD.<CUROBJS|CURMOBS|GAMEOBJS>(VNUM)% - возвращает количество обьектов
данного типа в игре (включая ренту), мобов в игре, предметов в мире(без
ренты) - не учитываются ДТ и закрытые комнаты !!!
%PEOPLE% - количество игроков в игре
%TIME.<HOUR|DAY|MONTH|YEAR>% - значение игрового времени указанного типа
%RANDOM.<CHAR|VALUE>% - возвращает случайного игрока или случайное 
число из диапазона 1 - value


***********     Поля переменных в зависимости от типа ИД     ***********
MOB | PERS
========================================================================
.iname 		- имя в именительном падеже
.rname 		- имя в родительном падеже
.dname 		- имя в дательном падеже
.vname 		- имя в винительном падеже
.tname 		- имя в творительном падеже
.pname 		- имя в предложном падеже
.name  		- имя или short_description
.id    		- ИД(уникальный) персонажа (для мобов - уникален для типа моба)
.alias 		- имя
.level 		- уровень
.hitp  		- количество хитов
.maxhitp	- максимум хитп
.mana  		- нужно для полного мема
.maxmana  	- накоплено маны
.move		- количество мувов
.maxmove      	- максимум мувов
.gold[(add)]    - количество золота [или добавить столько золота)]
.align          - наклонности
.exp[(add)]     - опыт [или добавить столько опыта] - автоматически
                  изменение левела произойдет только при бытве !
.sex            - пол(!число! = 0-нет,1-муж,2-жен,3-поли)
.g              - суффикс от пола о//а/и
.q              - ло//ла/ли
.u		- ось/ся/ась/ись
.w		- ое/ый/ая/ые
.y		- ло/ел/ла/ли
.a		- о//а/ы
.weight		- вес
.canbeseen	- видим мобом, вызвавшим триггер
.class		- профессия (число !)
.race		- раса (число !)
.fighting	- id персонажа, с которым сражается
.is_killer[(on|off)]	- установлен ли флаг убийцы [или устанвить|снять]
.is_thief[(on|off)]	- установлен ли флаг вора [или учтановить|снять]
.riding		- неясно что (устанавливается id персонажа)
.ridden_by	- неясно что (устанавливается id персонажа)
.vnum		- возвращает vnum персонажа (-1 для игрока)
.str		- сила
.stradd		- добавочная сила (вещи, аффекты и тп)
.int		- интеллект
.intadd		- добавочный интеллект
.wis		- мудрость
.wisadd		- добавочная мудрость
.con		- телосложение
.conadd		- добавочное телосложение
.dex		- ловкость
.dexadd		- добавочная ловкость
.cha		- обаяние
.chaadd		- добавочное обаяние
.size		- размер
.sizeadd	- добавочный размер
.room		- vnum комнаты, в кторой находится
.realroom	- реальный номер комнаты (id relroom = realroom + ROOM_ID_BASE)
.skill(skillname) 	- процент владения умением
.spelltype(spellname)	- тип владения заклинанием
.spellcount(spellname)	- количество заклинаний
.eq(pos)		- id предмета экипировки в позиции pos(число !)
.varexist(varname)	- существует глобальная(для скрипта) переменнная с этим именем
.next_in_room		- id следующего моба|игрока в комнате
!.quested(value)	- участвовал ли персонаж в выполнении квеста с номером
                          value
!.setquesting(value)	- пометить персонаж, как участвовавший в квесте с номером
			  value

Если ничего этого не найдено - ищется глобальная(для скрипта) переменная с
этим именем.


OBJ
=====================================================================
.iname 		- имя в именительном падеже
.rname 		- имя в родительном падеже
.dname 		- имя в дательном падеже
.vname 		- имя в винительном падеже
.tname 		- имя в творительном падеже
.pname 		- имя в предложном падеже
.name  		- имя или short_description
.id    		- ИД(уникальный) персонажа (для мобов - уникален для типа моба)
.shortdesc	- краткое описание предмета
.vnum		- виртуальный номер предмета(как в базе)
.type		- тип предмета (число !)
.timer		- таймер предмета
.val0		- значение 0 предмета
.val1		- значение 1 предмета
.val2		- значение 2 предмета
.val3		- значение 3 предмета
.carried_by	- id персонажа, который несет предмет
.worn_by	- id персонажа, на котором наде предмет
.g              - суффикс от пола о//а/и
.q              - ло//ла/ли
.u		- ось/ся/ась/ись
.w		- ое/ый/ая/ые
.y		- ло/ел/ла/ли
.a		- о//а/ы
.count		- число предметов в игре(в т.ч. и в ренте)
.room		- vnum комнаты, в которой находится предмет 
                  (или персонаж, им владеющий)
.sex		- пол предмета (число !)

ROOM
=====================================================================
.name		- номер комнаты
.north		- информация о выходе на север
.east		- информация о выходе на восток
.south		- информация о выходе на юг
.west		- информация о выходе на запад
.up		- информация о выходе вверх
.down		- информация о выходе вниз
.vnum		- виртуальный номер комнаты
.people		- id первого персонажа в комнате




*****************  Функции, выполняемые скриптами   ******************
Контекст - значение, которое используется для поиска глобальных и
надглобальных переменных - каждая переменная должна иметь совпадение по
имени и по контексту, иначе она не принимается во внимание (для локальных
переменных контекст принимается во внимание, если контекст локальной 
переменной отличен от 0, который принимается по умолчанию)



EVAL <variable> <expresion>
Вычисляет и устанавливает переменную

NOP
Пустая операция

EXTRACT <varname> <num> <string>
Помещает строку, начиная с <num> слова, в переменную <varname>

MAKEUID <varname> <value>
Делает из значения UID и помещает в переменную <varname>

CALCUID <varname> <vnum> <mob|obj|room>
Ищет для моба|предмета|комнаты с номером <vnum> ее UID  и помещает
в переменную <varname>

HALT
Прекращает выполнение тригера

DG_CATS <'spellname'> <name>
Кастует заклинание<spellname> на что-то с именем <name>
(название заклинания обязательно должно быть в апострофах)

DG_AFFECT <charname> <affect> <value> <duration>
Устанавливает аффеки<affect> на игрока<charname> со значение<value> и
длительностью<duration>

GLOBAL <varname>
Превращает локальную переменную <varname> в глобальную для скрипта
с использованием текущего установленного контекста

WORLDS <varname>
Превращает локальную переменную <varname> в надглобальную для
всех скриптов с использованием текущего установленного контекста

CONTEXT <value>
Устанавливает текущий констекст в значение <value>

REMOTE <varname> <uid>
Копирует локальную переменную <varname> в глобальные для скрипта, связанного
с мобом|предметом|комнатой с id<uid>

RDELETE <varname> <uid>
Удаляет глобальную переменную <varname> из другого скрипта, связанного
с мобом|предметом|комнатой с id<uid>

RETURN <value>
Устанавливает возвращаемое скриптом значение в <value>

SET <varname> <string>
Устанавливает локальную переменную <varname> в строку <string>

UNSET <varname>
Удаляет текущую переменную <varname> из скрипта или списка надглобальных
переменных 

WAIT [UNTIL] <time|tics(t)|seconds(s)>
Ожидать следующее количество тиков или секунд или достижение следующего
значения времени

BREAK
Выход из текущей конструкции SWITCH

ATTACH <trig_vnum> <uid>
Подключает тригер с реальным(как в базе) номером <trig_vnum> к комнате|
мобу|предмету с id<uid>

DETACH <trig_vnum> <uid>
Отключает тригер с реальным номером <trig_vnum> от комнаты|моба|предмета 
с id<uid>

RUN <trig_vnum> <uid>
Запускает тригер с реальным номером <trig_vnum> на комнате|мобе|предмете
с id<uid>, если запуск прошел удачно - тригер прекращается и возвращает
значение возврата запущенного тригера.
При запуске тригера все локальные и глобальные переменные из текущего 
тригера копируются в вызываемый тригер.

EXEC
Аналогично RUN, но продолжается выполнение текущего тригера в любом случае.

.strlen
Возвращает длину строки

.trim
Обрезает пробелы спереди и сзади

.contains(подтекст)
Проверяет содержание подтекста в строке

.car
Возвращает первое слово

.cdr
Возвращает строку без первого слова



Типы скриптов

1) MTRIG_RANDOM
-none-
2) MTRIG_BRIBE
amount
actor
3) MEMORY - выполняется при встрече игрока из памяти
если нет команды при выполнении функции mremember - выполняется
4) MTRIG_MEMORY 
actor
ВНИМАНИЕ! По окончанию выполнения запомненный персонаж забывается -
следует перезапомнить !
5) MTRIG_GREET
6) MTRIG_GREET_ALL
direction (string)
actor
7) MTRIG_ENTRY
8) MTRIG_COMMAND
actor
arg
cmd
!!! Примечание
- если аргумент тригера (*)  - любая фраза
- если числовой аргумент = 0 - список слов (фразы можно заключать в "")
- если числовой аргумент = 1 - подстрока
- иначе                      - полное соответствие
9) MTRIG_SPEECH
actor
speech
!!! Условия проверки аналогичны приведенной выше
10) MTRIG_ACT
actor
victim
object
target
arg
!!! Условия проверки аналогичны приведенной выше
11) MTRIG_FIGHT
actor
12) MTRIG_HITPRCNT
actor
13) MTRIG_RECIEVE
actor
object
14) MTRIG_DEATH
actor
15) MTRIG_LOAD
-none-


1) OTRIG_RANDOM
- none -
2) OTRIG_TIMER
- none -
3) OTRIG_GET
actor
4) OTRIG_CMD
actor
arg
cmd
Примечание
если аргумент *  - выполняется всегда
иначе            - полное совпадение аргумента
5) OTRIG_WEAR
actor
6) OTRIG_REMOVE
actor
7) OTRIG_DROP
actor
8) OTRIG_GIVE
actor
victim
9) OTRIG_LOAD
- none -
!New! 10) OTRIG_PICK
actor
!New! 11) OTRIG_OPEN, OTRIG_UNLOCK
actor
mode = 0 - open, 1 - unlock
!New! 12) OTRIG_CLOSE, OTRIG_LOCK
actor
mode = 0 - close, 1 - lock


1) WTRIG_RESET
- none -
2) WTRIG_RANDOM
- none -
3) WTRIG_ENTER
actor
direction
4) WTRIG_COMMAND
actor
arg
cmd
Примечание:
Условия см. MTRIG_COMMAND
5) WTRIG_SPEECH
actor
speech
Примечание:
Условия см. MTRIG_SPEECH
6) WTRIG_DROP
actor
object
! New ! 7) WTRIG_PICK
direction
actor
! New ! 8) WTRIG_UNLOCK, WTRIG_OPEN
direction
actor
mode = 0 - open, 1 - unlock
! New ! 9) WTRIG_CLOSE, WTRIG_LOCK
direction
actor
mode = 0 - close, 1 - lock
